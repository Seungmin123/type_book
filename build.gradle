buildscript {
	ext {
		springBootVersion = '2.7.14'
		querydslPluginVersion = '1.0.10'
		querydslVersion = '5.0.0'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" } // plugin 저장소
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.1.6'
}

apply plugin: 'com.ewerk.gradle.plugins.querydsl'

group = 'com.muzlive.kitpage'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

tasks.named("bootJar") {
	archiveClassifier = 'boot'
}

tasks.named("jar") {
	archiveClassifier = ''
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.5.6'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.5.6'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '2.5.5'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.32'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'
	implementation ("com.querydsl:querydsl-core:$querydslVersion")
	implementation ("com.querydsl:querydsl-apt:$querydslVersion")
	implementation ("com.querydsl:querydsl-jpa:$querydslVersion")
	implementation ("com.querydsl:querydsl-sql:$querydslVersion")
	implementation ("com.querydsl:querydsl-sql-spring:$querydslVersion")
	implementation ("com.querydsl:querydsl-sql-codegen:$querydslVersion")

	// aws
	implementation 'software.amazon.awssdk:s3-transfer-manager:2.19.20'
	implementation 'software.amazon.awssdk:bom:2.19.20'
	implementation 'software.amazon.awssdk:sdk-core:2.19.20'
	implementation 'software.amazon.awssdk:s3:2.19.20'
	implementation 'software.amazon.awssdk:cloudfront:2.19.20'
	implementation 'software.amazon.awssdk:kms:2.19.20'
	implementation 'software.amazon.awssdk.crt:aws-crt:0.20.3'

	// google
	implementation 'com.google.api-client:google-api-client:1.32.2'
	implementation 'com.google.apis:google-api-services-youtube:v3-rev222-1.25.0'

	// log
	implementation group: 'com.googlecode.log4jdbc', name: 'log4jdbc', version: '1.2'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.0'

	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	// ffmpeg
	implementation group: 'net.bramp.ffmpeg', name: 'ffmpeg', version: '0.6.2'

	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	// firebase
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4'

	// Image Convert
	implementation 'org.sejda.imageio:webp-imageio:0.1.6'
	//implementation group: 'org.imgscalr', name: 'imgscalr-lib', version: '4.2'


	// test
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def querydslSrcDir = 'src/main/generated'

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

clean {
	delete file(querydslSrcDir)
}
