name: Prod Build And Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build without Test
        run: |
          echo "PROD Pipeline Started!"
          ./gradlew clean
          ./gradlew build -x test --no-build-cache
        continue-on-error: false

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: kit-page-0.0.1-SNAPSHOT.jar
          path: build/libs/kit-page-0.0.1-SNAPSHOT.jar

  upload-to-s3:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: kit-page-0.0.1-SNAPSHOT.jar
          path: build/libs

      - name: Set VERSION_LABEL
        id: vars
        run: echo "VERSION_LABEL=${GITHUB_RUN_NUMBER}_${GITHUB_SHA}" >> $GITHUB_ENV

      - name: Copy files to build directory
        run: |
          cp src/appspec.yml build/libs/appspec.yml
          cp -rf src/scripts/start.sh build/libs/start.sh
          cp -rf src/scripts/stop.sh build/libs/stop.sh

      - name: Zip files
        run: |
          cd build/libs
          zip ../../kit-page-0.0.1-SNAPSHOT.jar *
          cd ../../

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: 'ap-northeast-2'

      - name: Upload to S3 # TODO
        run: |
          aws s3 cp kit-page-0.0.1-SNAPSHOT.jar s3://kitpage-pipe-seoul/kitpage-prod-${{ github.run_id }}-${{ github.sha }}.zip

  deploy:
    runs-on: ubuntu-latest
    needs: upload-to-s3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: 'ap-northeast-2'

      - name: Deploy application # TODO
        run: |
          aws deploy create-deployment \
            --application-name KitPage-CodeDeploy \
            --deployment-group-name KitPage-CodeDeploy-Group \
            --s3-location bucket=kitpage-pipe-seoul,key=kitpage-prod-${{ github.run_id }}-${{ github.sha }}.zip,bundleType=zip \
            --file-exists-behavior OVERWRITE \
            --ignore-application-stop-failures