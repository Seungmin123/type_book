name: Develop Build and Deploy

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build without Test
        run: |
          echo "DEVELOP Pipeline Started!"
          ./gradlew clean
          ./gradlew build -x test --no-build-cache
        continue-on-error: false

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.3

      - name: Deploy configuration with CodeDeploy
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY_ID }}
          aws-region: ap-northeast-2

      - name: add security group github action ip
        run: |
          echo "To Insert steps' ip : ${{ steps.ip.outputs.ipv4 }}"
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.DEV_EC2_SG_ID }} --ip-permissions IpProtocol=tcp,FromPort=22,ToPort=22,IpRanges="[{CidrIp=${{ steps.ip.outputs.ipv4 }}/32,Description='GitHub action ip address To delete'}]"

      - name: Create PEM file
        run: |
          echo "${{ secrets.DEV_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload jar and docker to EC2
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no build/libs/kit-page-0.0.1-SNAPSHOT-boot.jar ${{ secrets.DEV_EC2_USER }}@${{ secrets.DEV_EC2_HOST }}:/home/ec2-user/nonstop/jar/app.jar
          scp -i key.pem -o StrictHostKeyChecking=no Dockerfile docker-compose.yml ${{ secrets.DEV_EC2_USER }}@${{ secrets.DEV_EC2_HOST }}:/home/ec2-user/nonstop/

      - name: Restart Application using Docker Compose2
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.DEV_EC2_USER }}@${{ secrets.DEV_EC2_HOST }} '
            cd /home/ec2-user/nonstop
            docker compose down || true
            docker compose up -d --build
          '

      - name: Revoke GitHub IP from Security Group
        if: always()
        run: |
          echo "To delete steps' ip : ${{ steps.ip.outputs.ipv4 }}"
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.DEV_EC2_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
